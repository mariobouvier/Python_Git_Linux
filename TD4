EXERCICE 1

# 3. Set the correct permissions for the private key file
chmod 400 my_key.pem

# 4. Connect to the remote instance using SSH and exit
ssh -i my_key.pem username@remote_instance_ip
exit

# 5. Create a script named connect.sh
echo '#!/bin/bash' > connect.sh
echo 'ssh -i my_key.pem username@remote_instance_ip' >> connect.sh

# 6. Make the script executable, run it, and exit the remote instance
chmod +x connect.sh
./connect.sh
exit

# 7. Rename the private key, update the connect.sh script, run it, and exit the remote instance
mv my_key.pem .my_key.pem
echo '#!/bin/bash' > connect.sh
echo 'ssh -i .my_key.pem username@remote_instance_ip' >> connect.sh
./connect.sh
exit

EXERCICE 2:

# 1. On your local machine create a file named test_to_remote_instance.txt
touch test_to_remote_instance.txt

# 2. Connect to your remote instance, create a file named test_from_remote_instance.txt, and exit
ssh -i .my_key.pem username@remote_instance_ip 'touch test_from_remote_instance.txt'
exit

# 3. Use the scp command to send and get files
scp -i .my_key.pem test_to_remote_instance.txt username@remote_instance_ip:~
scp -i .my_key.pem username@remote_instance_ip:test_from_remote_instance.txt .

# 4. Create two scripts: scp_to_remote_instance.sh and scp_from_remote_instance.sh

# scp_to_remote_instance.sh
echo '#!/bin/bash' > scp_to_remote_instance.sh
echo 'scp -i .my_key.pem "$1" username@remote_instance_ip:~' >> scp_to_remote_instance.sh
chmod +x scp_to_remote_instance.sh

# scp_from_remote_instance.sh
echo '#!/bin/bash' > scp_from_remote_instance.sh
echo 'scp -i .my_key.pem username@remote_instance_ip:"$1" .' >> scp_from_remote_instance.sh
chmod +x scp_from_remote_instance.sh

# 5. Test your scripts with varying files
./scp_to_remote_instance.sh test_to_remote_instance.txt
./scp_from_remote_instance.sh test_from_remote_instance.txt
